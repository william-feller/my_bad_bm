/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java library project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.6/userguide/building_java_projects.html in the Gradle documentation.
 * This project uses @Incubating APIs which are subject to change.
 */

plugins {
    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'
}


repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api libs.commons.math3

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation libs.guava

    implementation fileTree(dir: 'libs', include: ['*.jar'])
}
sourceSets{
    // Make sure gradle (also) places resource files where IntelliJ wants them
    sourceSets.main.output.resourcesDir = sourceSets.main.output.classesDirs.asPath
    compileJava.dependsOn(processResources)
}

testing {
    suites {
        // Configure the built-in test suite
        test {
            // Use JUnit Jupiter test framework
            useJUnitJupiter('5.10.0')
        }
    }
}

jar {
    manifest {
        attributes 'Main-Class': 'App.java'
    }
}

tasks.register('customFatJar', Jar) {
    manifest {
        attributes 'Main-Class': 'src.edu.touro.mco152.bm.App'
    }
    archiveBaseName = 'badbm'
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    from { configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}
